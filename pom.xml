<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>ocp-task-manager</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>Job Manager</name>
    <description>Job Manager for OpenShift</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Spring Boot default profile in order to use an embedded database -->
        <run.profiles>dev</run.profiles>

        <!-- configure the versions you want to use here -->
        <fabric8.version>2.2.170.redhat-000019</fabric8.version>
        <spring-boot.version>1.4.1.RELEASE</spring-boot.version>

        <!-- Maven plugin versions -->
        <fabric8.maven.plugin.version>3.1.80.redhat-000019
        </fabric8.maven.plugin.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- import Fabric8 platform BOM first -->
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project-bom-camel-spring-boot</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-servlet-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jackson-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-swagger-java-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-client</artifactId>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Needed for CamelSpringBootRunner -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-arquillian</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- For mocking the OpenShift server during unit tests -->
        <!-- https://maven.repository.redhat.com/ga/io/fabric8/openshift-mock/1.4.14.redhat-000021/ -->
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-mock</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- The version of mockwebserver used in this version of kubernetes-client -->
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>0.0.4</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <defaultGoal>spring-boot:run</defaultGoal>

        <plugins>
            <!-- Compiler plugin enforces Java 1.8 compatibility -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <!-- We cleanup system properties an env vars, so that we can test in a predictable env -->
                    <environmentVariables>
                        <KUBERNETES_MASTER></KUBERNETES_MASTER>
                        <KUBERNETES_API_VERSION></KUBERNETES_API_VERSION>
                        <KUBERNETES_TRUST_CERTIFICATES></KUBERNETES_TRUST_CERTIFICATES>
                        <KUBERNETES_CERTS_CA_FILE></KUBERNETES_CERTS_CA_FILE>
                        <KUBERNETES_CERTS_CA_DATA></KUBERNETES_CERTS_CA_DATA>
                        <KUBERNETES_CERTS_CLIENT_FILE></KUBERNETES_CERTS_CLIENT_FILE>
                        <KUBERNETES_CERTS_CLIENT_DATA></KUBERNETES_CERTS_CLIENT_DATA>
                        <KUBERNETES_CERTS_CLIENT_KEY_FILE></KUBERNETES_CERTS_CLIENT_KEY_FILE>
                        <KUBERNETES_CERTS_CLIENT_KEY_DATA></KUBERNETES_CERTS_CLIENT_KEY_DATA>
                        <KUBERNETES_CERTS_CLIENT_KEY_ALGO></KUBERNETES_CERTS_CLIENT_KEY_ALGO>
                        <KUBERNETES_CERTS_CLIENT_KEY_PASSPHRASE></KUBERNETES_CERTS_CLIENT_KEY_PASSPHRASE>
                        <KUBERNETES_AUTH_BASIC_USERNAME></KUBERNETES_AUTH_BASIC_USERNAME>
                        <KUBERNETES_AUTH_BASIC_PASSWORD></KUBERNETES_AUTH_BASIC_PASSWORD>
                        <KUBERNETES_AUTH_TRYKUBECONFIG></KUBERNETES_AUTH_TRYKUBECONFIG>
                        <KUBERNETES_AUTH_TRYSERVICEACCOUNT></KUBERNETES_AUTH_TRYSERVICEACCOUNT>
                        <KUBERNETES_AUTH_TOKEN></KUBERNETES_AUTH_TOKEN>
                        <KUBERNETES_WATCH_RECONNECTINTERVAL></KUBERNETES_WATCH_RECONNECTINTERVAL>
                        <KUBERNETES_WATCH_RECONNECTLIMIT></KUBERNETES_WATCH_RECONNECTLIMIT>
                        <KUBERNETES_REQUEST_TIMEOUT></KUBERNETES_REQUEST_TIMEOUT>
                        <KUBERNETES_NAMESPACE></KUBERNETES_NAMESPACE>
                        <KUBERNETES_TLS_VERSIONS>TLSv1.2,TLSv1.1,TLSv1</KUBERNETES_TLS_VERSIONS>
                    </environmentVariables>
                    <excludes>
                        <exclude>**/*KT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>resource</goal>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
